#! /bin/sh

if [ "$1x" == "x" ]; then
    echo usage: $0 source.js
    exit 1
fi

# output directory is .obj
if [ ! -d .obj ]; then
    mkdir .obj
    if [ ! -d .obj ]; then
        exit 1
    fi
fi

# delete files generated by a previous build
rm -f .obj/tmp.c .obj/tmp.exe .obj/tmp.asm .obj/runtime2.js .obj/runtime2.c

# transpile the js source in runtime/js into runtime2.c
/gcc/bin/cpp -Wno-trigraphs -P runtime/js/main.js > .obj/runtime2.js
echo '#define js_main js_init2' > .obj/runtime2.c
node index.js .obj/runtime2.js >> .obj/runtime2.c
if [ $? -ne 0 ]; then exit; fi

# transpile the input js source into tmp.c
node index.js $1 > .obj/tmp.c
if [ $? -ne 0 ]; then exit; fi

# C-compile everything together: the C sources in runtime,
# and the transpiled runtime2.c and tmp.c
/gcc/bin/gcc -municode -mconsole -std=c99 -g -I. -Iruntime \
    -Wall -pedantic -Wno-pedantic-ms-format -Wno-trigraphs \
    -D__USE_MINGW_ANSI_STDIO \
    -o .obj/tmp runtime/runtime.c .obj/runtime2.c .obj/tmp.c

# generate an assembly listing for the output executable
if [ -f .obj/tmp.exe ]; then
    /gcc/bin/objdump -M intel -d -s .obj/tmp.exe > .obj/tmp.asm
    exit 0
fi
exit 1
